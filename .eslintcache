[{"C:\\Users\\mh\\dev\\equity-calc\\src\\reportWebVitals.js":"1","C:\\Users\\mh\\dev\\equity-calc\\src\\App.js":"2"},{"size":362,"mtime":1606176212142,"results":"3","hashOfConfig":"4"},{"size":2479,"mtime":1608230492796,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yvoisp",{"filePath":"8","messages":"9","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"C:\\Users\\mh\\dev\\equity-calc\\src\\reportWebVitals.js",[],"C:\\Users\\mh\\dev\\equity-calc\\src\\App.js",["11","12"],"import \"./App.css\";\nimport { useState } from \"react\";\nimport { raceRange, raceCombos, rates, raceCombosForBoard, hello } from \"pec\";\n\nfunction App() {\n  const [board, setBoard] = useState(\"Ah9s8s\");\n  const [heroCard, setHeroCard] = useState(\"5h5s5c5d\");\n  const [villainCard, setVillainCard] = useState(\"6s6h6c6d\");\n  const [shouldRun, setShouldRun] = useState(false);\n\n  const changeBoard = (event) => setBoard(event.target.value);\n  const changeHeroCard = (event) => setHeroCard(event.target.value);\n  const changeVillainCard = (event) => setVillainCard(event.target.value);\n\n  let w, wr, l, lr, t;\n  if (shouldRun) {\n    const hero = [\n      heroCard[0] + heroCard[1],\n      heroCard[2] + heroCard[3],\n      heroCard[4] + heroCard[5],\n      heroCard[6] + heroCard[7],\n    ];\n    const villain = [\n      villainCard[0] + villainCard[1],\n      villainCard[2] + villainCard[3],\n      villainCard[4] + villainCard[5],\n      villainCard[6] + villainCard[7],\n    ];\n    const boardf = [];\n    for (let i = 0; i < board.length; i += 2)\n      boardf.push(board[i] + board[i + 1]);\n\n    let { win, loose, tie } = raceCombosForBoard(hero, villain, 1e4, boardf);\n    const { winRate, looseRate } = rates({ win, loose, tie });\n    w = win;\n    wr = winRate;\n    l = loose;\n    lr = looseRate;\n    t = tie;\n  }\n\n  return (\n    <div className=\"App\">\n      <div id=\"board\">\n        <form>\n          <label>\n            BOARD: <input type=\"text\" value={board} onChange={changeBoard} />\n          </label>\n        </form>\n      </div>\n      <div id=\"heroCards\">\n        <form>\n          <label>\n            HERO CARDS:{\" \"}\n            <input type=\"text\" value={heroCard} onChange={changeHeroCard} />\n          </label>\n        </form>\n      </div>\n      <div id=\"villainCards\">\n        <form>\n          <label>\n            VILLAIN CARDS:{\" \"}\n            <input\n              type=\"text\"\n              value={villainCard}\n              onChange={changeVillainCard}\n            />\n          </label>\n        </form>\n      </div>\n      <button onClick={() => setShouldRun(true)}>RUN</button>\n      <button onClick={() => setShouldRun(false)}>STOP</button>\n      <br />\n      <br />\n      <div id=\"heroEquity\">\n        HERO EQUITY: {wr} ({w})\n      </div>\n      <div id=\"villainEquity\">\n        VILLAIN EQUITY: {lr} ({l})\n      </div>\n      <div id=\"tie\">\n        TIES: ({t})\n      </div>\n      <br />\n      <br />\n      <br />\n      <div>{hello()}</div>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"13","severity":1,"message":"14","line":3,"column":10,"nodeType":"15","messageId":"16","endLine":3,"endColumn":19},{"ruleId":"13","severity":1,"message":"17","line":3,"column":21,"nodeType":"15","messageId":"16","endLine":3,"endColumn":31},"no-unused-vars","'raceRange' is defined but never used.","Identifier","unusedVar","'raceCombos' is defined but never used."]